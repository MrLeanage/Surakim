/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stock;

import bean.InventoryItem;
import bean.WithdrawItem;
import java.lang.*;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;
import services.InventoryService;

/**
 *
 * @author dulshan
 */
public class StockIn extends javax.swing.JInternalFrame {

    /**
     * Creates new form Stock
     */
    private InventoryItem selectedInventoryItem;

    public StockIn() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);
        setDefaultsValues();
        selectedInventoryItem = new InventoryItem();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventoryStockTable = new javax.swing.JTable();
        iSAddedDateField = new javax.swing.JTextField();
        iSIDField = new javax.swing.JTextField();
        iSNameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        clearBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        withdrawBtn = new javax.swing.JButton();
        ISQtyField = new javax.swing.JSpinner();
        nameLabel1 = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setAlignmentX(0.0F);
        setAlignmentY(0.0F);
        setEnabled(false);
        setFocusCycleRoot(false);
        setFocusable(false);
        setMinimumSize(new java.awt.Dimension(680, 550));
        setPreferredSize(new java.awt.Dimension(680, 550));
        setRequestFocusEnabled(false);
        setVerifyInputWhenFocusTarget(false);

        contentPanel.setBackground(new java.awt.Color(255, 255, 255));
        contentPanel.setAlignmentX(0.0F);
        contentPanel.setAlignmentY(0.0F);
        contentPanel.setAutoscrolls(true);
        contentPanel.setLayout(null);

        jLabel1.setBackground(new java.awt.Color(1, 1, 1));
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(1, 1, 1));
        jLabel1.setText("Consumable Inventory Stock In");
        jLabel1.setToolTipText("");
        contentPanel.add(jLabel1);
        jLabel1.setBounds(30, 50, 310, 24);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/backIcon.png"))); // NOI18N
        jButton2.setAlignmentY(0.0F);
        jButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        contentPanel.add(jButton2);
        jButton2.setBounds(400, 10, 62, 62);

        inventoryStockTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Stock ID", "Item Name", "Available Qty", "Added Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        inventoryStockTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                setSelectedItem(evt);
            }
        });
        jScrollPane1.setViewportView(inventoryStockTable);

        contentPanel.add(jScrollPane1);
        jScrollPane1.setBounds(10, 80, 453, 190);

        iSAddedDateField.setEditable(false);
        contentPanel.add(iSAddedDateField);
        iSAddedDateField.setBounds(250, 400, 210, 24);

        iSIDField.setEditable(false);
        contentPanel.add(iSIDField);
        iSIDField.setBounds(250, 280, 210, 24);
        contentPanel.add(iSNameField);
        iSNameField.setBounds(250, 300, 210, 24);

        jLabel2.setText("Added/Updated Date:");
        contentPanel.add(jLabel2);
        jLabel2.setBounds(20, 400, 170, 20);

        jLabel3.setText("Stock ID :");
        contentPanel.add(jLabel3);
        jLabel3.setBounds(20, 280, 170, 20);

        jLabel4.setText("Item Name :");
        contentPanel.add(jLabel4);
        jLabel4.setBounds(20, 300, 170, 20);

        jLabel5.setText("Available Quantity :");
        contentPanel.add(jLabel5);
        jLabel5.setBounds(20, 350, 170, 20);

        clearBtn.setText("CLEAR");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        contentPanel.add(clearBtn);
        clearBtn.setBounds(350, 480, 77, 32);

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        contentPanel.add(addBtn);
        addBtn.setBounds(150, 440, 80, 32);

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        contentPanel.add(updateBtn);
        updateBtn.setBounds(240, 440, 80, 32);

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        contentPanel.add(deleteBtn);
        deleteBtn.setBounds(330, 440, 100, 32);

        withdrawBtn.setText("Withdraw Stock");
        withdrawBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawBtnActionPerformed(evt);
            }
        });
        contentPanel.add(withdrawBtn);
        withdrawBtn.setBounds(150, 480, 190, 32);

        ISQtyField.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        ISQtyField.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));
        contentPanel.add(ISQtyField);
        ISQtyField.setBounds(250, 350, 210, 26);

        nameLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        nameLabel1.setForeground(new java.awt.Color(255, 0, 0));
        contentPanel.add(nameLabel1);
        nameLabel1.setBounds(220, 330, 210, 0);

        nameLabel.setBackground(new java.awt.Color(255, 255, 255));
        nameLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(255, 0, 0));
        nameLabel.setToolTipText("");
        nameLabel.setMaximumSize(new java.awt.Dimension(210, 30));
        nameLabel.setMinimumSize(new java.awt.Dimension(210, 30));
        nameLabel.setPreferredSize(new java.awt.Dimension(210, 30));
        contentPanel.add(nameLabel);
        nameLabel.setBounds(250, 326, 210, 10);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(contentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        StockHome stockHome = new StockHome();
        contentPanel.removeAll();
        contentPanel.add(stockHome).setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void clearFields(){
        iSIDField.setText("");
        iSNameField.setText("");
        ISQtyField.setValue(1);
        iSAddedDateField.setText("");
        nameLabel.setText("");
        selectedInventoryItem = new InventoryItem();
    }
    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
         clearFields();
    }//GEN-LAST:event_clearBtnActionPerformed
    
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        if ((iSNameField.getText() != null) && (!iSNameField.getText().isEmpty())) {
            InventoryItem inventoryItem = new InventoryItem();
            inventoryItem.setiSName(iSNameField.getText());
            inventoryItem.setiSQty((int) ISQtyField.getValue());
            inventoryItem.setiSDate(LocalDate.now().toString());

            InventoryService inventoryService = new InventoryService();
            if (inventoryService.addInventoryItem(inventoryItem)) {
                JOptionPane.showMessageDialog(null, "Item Added Succesfully");
                setDefaultsValues();
            } else {
                JOptionPane.showMessageDialog(null, "Failed to Add Item");
            }
        } else {
            nameLabel.setText("Item Name Required");
        }


    }//GEN-LAST:event_addBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        if (iSIDField.getText() != null) {
            InventoryItem inventoryItem = new InventoryItem();

            inventoryItem.setiSID(iSIDField.getText());
            inventoryItem.setiSName(iSNameField.getText());
            inventoryItem.setiSQty((int) ISQtyField.getValue());
            inventoryItem.setiSDate(LocalDate.now().toString());

            InventoryService inventoryService = new InventoryService();
            if (inventoryService.updateInventoryItem(inventoryItem)) {
                JOptionPane.showMessageDialog(null, "Item Updated Succesfully");
                setDefaultsValues();
            } else {
                JOptionPane.showMessageDialog(null, "Failed to Update Item");
            }
        } else {
            nameLabel1.setText("Please Select a row to Update");
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        if (iSIDField.getText() != null) {
            int input = JOptionPane.showConfirmDialog(null, "Do you want to delete Selected Item?", "Confirm Your Action",
                    JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.ERROR_MESSAGE);
            if (input == 0) {
                InventoryService inventoryService = new InventoryService();
                if (inventoryService.deleteInventoryItem(iSIDField.getText())) {
                    JOptionPane.showMessageDialog(null, "Item Deleted Succesfully");
                    setDefaultsValues();
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to Delete Item");
                }
            }
        } else {
            nameLabel1.setText("Please Select a row to Update");
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void withdrawBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawBtnActionPerformed
        // TODO add your handling code here:
        if (selectedInventoryItem.getiSID() != null) {
            if (selectedInventoryItem.getiSQty() >= (int) ISQtyField.getValue()) {
                InventoryItem inventoryItem = new InventoryItem();

                inventoryItem.setiSID(iSIDField.getText());
                inventoryItem.setiSName(iSNameField.getText());
                inventoryItem.setiSQty(selectedInventoryItem.getiSQty() - (int) ISQtyField.getValue());
                inventoryItem.setiSDate(selectedInventoryItem.getiSDate());

                WithdrawItem withdrawItem = new WithdrawItem();
                withdrawItem.setwSISID(iSIDField.getText());
                withdrawItem.setwSQty((int) ISQtyField.getValue());
                withdrawItem.setwSDate(String.valueOf(LocalDate.now()));
                   
                InventoryService inventoryService = new InventoryService();
                if (inventoryService.updateInventoryItem(inventoryItem)) {
                    if(inventoryService.addWithdrawItem(withdrawItem)){
                        JOptionPane.showMessageDialog(null, "Item Withdrawed Succesfully");
                        setDefaultsValues();
                    }else{
                         JOptionPane.showMessageDialog(null, "Failed to Withdraw Item");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to Withdraw Item");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Your are about to Withdraw items more than available in the Stock!");
            }
        } else {
            nameLabel1.setText("Please Select a row to Withdraw");
        }
    }//GEN-LAST:event_withdrawBtnActionPerformed

    private void setSelectedItem(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_setSelectedItem
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) inventoryStockTable.getModel();
        int modelRow = inventoryStockTable.getSelectedRow();
        int selectedRow = inventoryStockTable.convertRowIndexToModel(modelRow);

        selectedInventoryItem.setiSID(tableModel.getValueAt(selectedRow, 0).toString());
        selectedInventoryItem.setiSName(tableModel.getValueAt(selectedRow, 1).toString());
        selectedInventoryItem.setiSQty(Integer.parseInt(tableModel.getValueAt(selectedRow, 2).toString()));
        selectedInventoryItem.setiSDate(tableModel.getValueAt(selectedRow, 3).toString());

        System.out.println("Values :"+tableModel.getValueAt(selectedRow, 3).toString());
        iSIDField.setText(tableModel.getValueAt(selectedRow, 0).toString());
        iSNameField.setText(tableModel.getValueAt(selectedRow, 1).toString());
        ISQtyField.setValue(Integer.parseInt(tableModel.getValueAt(selectedRow, 2).toString()));
        iSAddedDateField.setText(tableModel.getValueAt(selectedRow, 3).toString());
    }//GEN-LAST:event_setSelectedItem

    private void loadTableData() {
        DefaultTableModel tableModel = (DefaultTableModel) inventoryStockTable.getModel();
        tableModel.setNumRows(0);
        InventoryService inventoryService = new InventoryService();
        for (InventoryItem inventoryItem : inventoryService.loadInventoryItemsList()) {
            String itemList[] = {String.valueOf(inventoryItem.getiSID()), inventoryItem.getiSName(), String.valueOf(inventoryItem.getiSQty()), inventoryItem.getiSDate()};
            tableModel.addRow(itemList);
        }
    }



    private void setDefaultsValues() {
        loadTableData();
        clearFields();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner ISQtyField;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton clearBtn;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField iSAddedDateField;
    private javax.swing.JTextField iSIDField;
    private javax.swing.JTextField iSNameField;
    private javax.swing.JTable inventoryStockTable;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel nameLabel1;
    private javax.swing.JButton updateBtn;
    private javax.swing.JButton withdrawBtn;
    // End of variables declaration//GEN-END:variables
}
